<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>