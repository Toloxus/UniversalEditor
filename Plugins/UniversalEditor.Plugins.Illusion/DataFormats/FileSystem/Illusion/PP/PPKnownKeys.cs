//
//  PPKnownKeys.cs - list of known keys to decrypt Illusion PP archive files
//
//  Author:
//       Michael Becker <alcexhim@gmail.com>
//
//  Copyright (c) 2011-2020 Mike Becker's Software
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License
//  along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace UniversalEditor.DataFormats.FileSystem.Illusion.PP
{
	/// <summary>
	/// List of known keys to decrypt Illusion PP archive files.
	/// </summary>
	public static class PPKnownKeys
	{
		public static readonly byte[] HakoTrialCode =
		{
			0x11,0x73,0x10,0x21,0x5A,0xA1,0xD0,0x8B,
			0x32,0x91,0x63,0x50,0xE9,0xA8,0xF6,0xD8,
			0x40,0x72,0x80,0xF9,0xEC,0x79,0x6E,0x8D,
			0x36,0x72,0x2B,0xA1,0x76,0xB6,0x67,0x92
		};

		public static readonly byte[] AG3WelcomeCode =
		{
			0xE5,0x77,0x64,0x05,0xD2,0x37,0x4D,0x2E,
			0xB7,0x4A,0xB7,0x2B,0x22,0x70,0xF1,0xD6,
			0xC7,0xE7,0x61,0x6D,0x10,0xED,0xF5,0xC1,
			0xD9,0x08,0x28,0xEC,0xE2,0x09,0xEA,0xD7
		};

		public static readonly byte[] SMTrialCode =
		{
			0x7C,0xF2,0x35,0x77,0x54,0x18,0x20,0x6E,
			0x9C,0x7B,0x9E,0x85,0x1F,0xB5,0x71,0x40,
			0x25,0xAD,0x71,0x43,0x64,0x20,0x20,0x7E,
			0xCF,0xE3,0x85,0xC0,0x41,0xDE,0x23,0x12
		};

		public static readonly byte[] SMRetailCode =
		{
			0x1E,0x5D,0x13,0xDD,0x7D,0x4C,0x4F,0xA7,
			0xDB,0xA7,0x29,0x14,0x10,0xF8,0xC0,0xBE,
			0x44,0x7F,0xD0,0x63,0x1C,0x22,0x7C,0x9F,
			0xE8,0xB9,0xF8,0xBE,0x58,0xB3,0xEF,0xF4
		};

		public static readonly byte[] AtHomeFigureCode =
		{
			0xAB,0x2C,0xC4,0x4E,0x7B,0xDF,0xBD,0x17,
			0xDC,0x2E,0x23,0x1E,0x4B,0xE5,0x80,0x3C,
			0x93,0xB1,0x1D,0x8C,0x81,0x36,0xB3,0x88,
			0x35,0x2D,0x30,0x4B,0x10,0x66,0xC8,0xE6
		};

		public static readonly byte[] AtHomeTrialCode =
		{
			0x67,0xF9,0x30,0x5A,0x09,0xAB,0xF5,0x60,
			0xD6,0x9F,0xFD,0x93,0xBA,0x9C,0xF5,0x60,
			0x11,0x6A,0xBA,0x79,0x4C,0x41,0x4A,0x8D,
			0xC7,0xBA,0xBB,0x9C,0x26,0x34,0x0F,0xEF
		};

		public static readonly byte[] RGTrialCode =
		{
			0x58,0x62,0x86,0xD2,0x3B,0x2F,0xC4,0x5F,
			0xEE,0x58,0x76,0x2D,0xB4,0x02,0x02,0xCD,
			0x0A,0x08,0x40,0x30,0x08,0x66,0x1D,0xE8,
			0x9B,0xA6,0x61,0xCB,0x63,0xF3,0xF3,0xB4,
		};

		public static readonly byte[] YuushaRetailCode =
		{
			0x2B, 0xA8, 0xF2, 0x1E, 0xDD, 0x1D, 0x95,
			0xC8, 0x7E, 0xD4, 0x4F, 0x76, 0x6F, 0x41,
			0xBF, 0xC7
		};

		public static readonly byte[] YuushaTrialCode =
		{
			0xD1,0xEC,0x08,0xA1,0x48,0x7F,0xD6,0x8F,
			0xAD,0x34,0xB2,0xA2,0x35,0x4D,0x55,0xD1,
			0x1F,0xC1,0xB4,0x47,0x2F,0x54,0x89,0x24,
			0x61,0xCE,0xB7,0xA5,0x22,0x80,0x05,0x29,
		};

		public static readonly byte[] EskMateCode =
		{
			0xE9,0xEC,0xFC,0x9F,0x67,0x4A,0x91,0x8D,
			0x72,0x4F,0x5F,0xAE,0xBB,0xA5,0xF7,0x0A,
			0x12,0xB9,0x03,0xC5,0x4E,0x1C,0xE3,0x7A,
			0x7E,0xF4,0x05,0x48,0x51,0x18,0x16,0x99
		};

		public static readonly byte[] CharacolleBenchCode =
		{
			0xEB,0xD6,0x6B,0x29,0x21,0x03,0xA9,0x2C,
			0x5F,0x5F,0xEF,0xBB,0xEC,0x10,0xFC,0x4C,
			0x51,0xED,0xD4,0xBE,0x99,0x4D,0x45,0x06,
			0x65,0x51,0x8E,0x25,0x33,0x5C,0x05,0x53,
		};

		public static readonly byte[] SBZeroRetailCode =
		{
			0x14,0x6F,0x07,0xB8,0x9A,0x0E,0x84,0x44,
			0x59,0x25,0x8E,0x18,0xBC,0x39,0x9E,0x5C,
			0x99,0x7A,0xA0,0x92,0xD4,0xB7,0xBC,0x55,
			0x1E,0x2E,0x88,0x27,0x14,0xA1,0xE6,0x27,
		};

		public static readonly byte[] AtHomeRetailCode =
		{
			0x7E, 0x71, 0x0E, 0x78, 0xE7, 0xAF, 0xA7,
			0x8F, 0x1F, 0x9E, 0xE3, 0xC5, 0x08, 0x00,
			0x3A, 0x71
		};

		public static readonly byte[] AG3RetailCode =
		{
			0xCA, 0x00, 0x6E, 0x00, 0x0D, 0x00, 0xB3,
			0x00, 0x9C, 0x00, 0x36, 0x00, 0x1E, 0x00,
			0xE8, 0x00
		};

		public static readonly byte[] HakoRetailCode =
		{
			0xEE, 0xCB, 0x75, 0x16, 0x33, 0x35, 0xE6, 0x4C,
			0x68, 0x2F, 0x6D, 0x93, 0x0D, 0xF4, 0x39, 0x05
		};

		public static readonly byte[] DGRetailCode =
		{
			0x10, 0x21, 0xD0, 0x8B, 0x63, 0x50, 0xF6, 0xD8,
			0x11, 0x73, 0x5A, 0xA1, 0x32, 0x91, 0xE9, 0xA8
		};

		public static readonly byte[] SMSweetsRetailCode =
		{
			0x86, 0x3F, 0xD5, 0xB8, 0xB4, 0x4A, 0xF4, 0x06,
			0xF6, 0x70, 0x8A, 0x07, 0x26, 0x2F, 0x72, 0x35
		};

		public static readonly byte[] SM2TrialCode =
		{
			0x85, 0x45, 0x1B, 0xBC, 0x6E, 0xDA, 0x0E, 0xA6,
			0x3F, 0xCE, 0x98, 0x7D, 0xD7, 0x68, 0xD9, 0xEF,
			0xB4, 0x3C, 0x86, 0xEF, 0x4B, 0x0D, 0x08, 0x28,
			0xF7, 0xDE, 0x12, 0xA6, 0xB7, 0x0A, 0x61, 0x7A
		};

		public static readonly byte[] SM2RetailCode =
		{
			0x43, 0xCE, 0x31, 0x6F, 0x65, 0xFC, 0x2F,
			0x9D, 0x82, 0x41, 0x73, 0xC4, 0x75, 0x9D,
			0xB7, 0xD5
		};
	}
}
